language: haxe

haxe:
  - "3.2.1"

env:
  - TARGET=flash
  - TARGET=neko
  - TARGET=cpp
  - TARGET=html5
  - TARGET=docs

sudo: false

before_install:
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x32 -extension GLX
  - export AUDIODEV=null

install:
  - git clone --recursive https://github.com/openfl/lime ~/lime --depth 1 > log.txt || cat log.txt
  - haxelib dev lime ~/lime
  - haxelib install compiletime
  - haxelib install hxcpp > log.txt || cat log.txt
  - haxelib install format > log.txt || cat log.txt
  - if [[ $TARGET == 'docs' ]]; then git clone https://github.com/openfl/dox ~/dox --depth 1 > log.txt || cat log.txt ; fi
  - if [[ $TARGET == 'docs' ]]; then haxelib dev dox ~/dox ; fi
  - haxelib install mcover > log.txt || cat log.txt
  - haxelib install hamcrest > log.txt || cat log.txt
  - git clone https://github.com/jgranick/MassiveUnit ~/munit --depth 1 > log.txt || cat log.txt
  - haxelib dev munit ~/munit/src
  - haxelib dev openfl $(pwd)
  - cd ~/munit/tool
  - haxe build.hxml
  - if [[ $TARGET == 'cpp' ]] || [[ $TARGET == 'neko' ]]; then haxelib run lime rebuild linux -release -64 -nocffi > log.txt || cat log.txt; fi
  - haxelib run lime rebuild tools -nocffi

before_script:
  - cd $TRAVIS_BUILD_DIR/tests/unit
  - haxelib run munit gen

script:
  #- haxelib run lime test neko
  #- haxelib run lime test neko -Ddisable-cffi
  - if [[ $TARGET == 'neko' ]]; then haxelib run lime build neko -nocffi ; fi
  - if [[ $TARGET == 'neko' ]]; then haxelib run lime build neko -Ddisable-cffi -nocffi ; fi
  - if [[ $TARGET == 'flash' ]]; then haxelib run munit test -as3 -norun -nocffi ; fi
  - if [[ $TARGET == 'html5' ]]; then haxelib run munit test -browser phantomjs -nocffi ; fi
  - if [[ $TARGET == 'cpp' ]]; then haxelib run lime test linux --window-hardware=false ; fi
  - if [[ $TARGET == 'docs' ]]; then cd $TRAVIS_BUILD_DIR/docs && haxe build.hxml ; fi

  # Functional testing
  - if [[ $TARGET == 'neko' ]]; then cd $TRAVIS_BUILD_DIR/tests/functional && haxe build_neko.hxml && neko tests.n ; fi
  - if [[ $TARGET == 'cpp' ]]; then cd $TRAVIS_BUILD_DIR/tests/functional && haxe build_cpp.hxml && ./bin/FunctionalTest ; fi

notifications:
  slack: openfl:sBwVO0kgB7EuWLYzZzUezVIz

cache:
  directories:
    - $HOME/haxe/lib
